{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","cardsArray","robots","map","user","SearchBox","searchChange","onChange","type","placeholder","Scroll","props","style","overflowY","height","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAC3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,aACzD,gCACC,6BAAKL,IACL,4BAAIC,WCIOK,EATE,SAAC,GAAa,IACxBC,EADuB,EAAXC,OACQC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAoBR,GAAIQ,EAAKR,GAAID,MAAOS,EAAKT,MAAOD,KAAMU,EAAKV,MAApDU,EAAKR,OACtD,OACC,8BACKK,KCGQI,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKT,UAAU,MAAf,SACC,uBAAOU,SAAUD,EAAcT,UAAY,sCAAsCW,KAAK,SAASC,YAAY,qBCK/FC,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,QAASC,OAAQ,mBAA3D,SACEJ,EAAMK,YCgBKC,E,kDAlBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,8DAOAC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAGG,KAAKJ,MAAMC,SACN,yDACDG,KAAKX,MAAMK,a,GAfQQ,aC6CbC,G,wDAvCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACZhB,OAAQ,GACR0B,YAAa,IAJF,E,gEAQO,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACrB,OAAQiC,S,+BAO7B,IAAD,EACsBb,KAAKJ,MAA5BhB,EADC,EACDA,OAAQ0B,EADP,EACOA,YACTQ,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEtD,OAASrC,EAAOuC,OAGd,sBAAK5C,UAAY,KAAjB,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUxB,OAAQkC,WAPtB,oBAAIvC,UAAU,KAAd,yB,GAzBe2B,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.23505dce.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) =>{\n\treturn (\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n\t\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt=\"Jane Doe\"/>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) =>{\n\tconst cardsArray = robots.map(user => <Card key={user.id} id={user.id} email={user.email} name={user.name}/>);\n\treturn (\n\t\t<div>\n\t\t    {cardsArray}\n\t    </div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input onChange={searchChange} className = \"pa3 ba b--green tc bg-lightest-blue\" type=\"search\" placeholder=\"Search Robots\" />\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', height: '425px', border: '2px solid black'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info){\n\t\tthis.setState({hasError: true});\n\t}\n\n\trender(){\n\t\tif(this.state.hasError)\n\t\t\treturn <h1>Oops. That is not good.</h1>;\n\t\treturn this.props.children;\n\t}\t\n}\n\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css'\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchField: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({robots: users}));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchField: event.target.value});\n\t}\n\n\trender() {\n\t\tconst {robots, searchField} = this.state;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t});\n\t\treturn (!robots.length) ? \n\t\t\t<h1 className='tc'>Loading</h1> :\n\t\t\t(\n\t\t\t\t<div className = 'tc'>\n\t\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}